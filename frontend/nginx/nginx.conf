user nginx;
worker_processes 1;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    log_format main
        '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;
    sendfile on;
    keepalive_timeout 65;

    brotli on;
    brotli_comp_level 5;
    brotli_static on;
    brotli_types text/plain
        text/css
        application/javascript
        application/x-javascript
        text/xml
        application/xml
        application/xml+rss
        text/javascript
        image/x-icon
        image/vnd.microsoft.icon
        image/bmp
        image/svg+xml;

    gzip on;
    gzip_static on;
    gzip_disable "MSIE [1-6]\.(?!.*SV1)";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 4;
    gzip_types text/plain
        text/css
        application/javascript
        application/x-javascript
        text/xml
        application/xml
        application/xml+rss
        text/javascript
        image/x-icon
        image/vnd.microsoft.icon
        image/bmp
        image/svg+xml;

    include /etc/nginx/conf.d/*.conf;

    server {
        listen 3000;
        server_name frontend;

        location / {
            ## This would be the directory where the React app's static files are stored at
            root /usr/share/nginx/html;
            try_files $uri /index.html;
            add_header Cache-Control "no-store, no-cache, must-revalidate";
        }

        location /static/ {
            alias /usr/share/nginx/html/static/;
            ## cache will be invalidated after every new build as
            ## frontend build system generates new file names (revving)
            ## for the static assets every time we build and new file 
            ## names invalidates the cache when browsers requests it.
            ## see https://medium.com/@pratheekhegde/setting-caching-headers-for-a-spa-in-nginx-eb2f75f52441
            expires 1y;
            add_header Cache-Control "public";
            access_log off;
        }
    }
}